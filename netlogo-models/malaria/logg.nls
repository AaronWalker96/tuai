;Import CSV extension
extensions [csv]

;Define global variables
globals [
  logg-date
]

;About

;logg.nls version 3

;logg is a utility to make loging data out from netlogo to csv files easy
;In your model setup function, call "logg-setup"
;Then when you want to log something, call "logg-append <tick number> <log name> <log data (List)>"
;You can get the current tick number by calling "ticks"
;The log data should be passed in in the form of a list eg: [1 5 "testing 123"]
;Procedures beginning with "!" are internal and should not be called from yuour model


;Call in proj setup function to init logger
to logg-setup
  set logg-date !logg-isodate date-and-time
  
end

;Call this procedure where you want to logg
to logg-append [#tick #name #data]
  !logg-fwrite #tick #name #data
end

;Internal function - performs csv disk write
to !logg-fwrite [#tick #name #data]
  let body fput #tick #data
  file-open (word #name "_" logg-date ".csv")
  file-print csv:to-row body
  file-close
end

;Internal function to make net logo date and tiem format closer to ISO standard
to-report !logg-isodate [#dateandtime]
  let sh-time-h substring  #dateandtime 0 2
  let sh-time-m substring  #dateandtime 3 5
  let sh-time-s substring  #dateandtime 6 8
  let ampm substring  #dateandtime 13 15
  let sh-date-d substring  #dateandtime 16 18
  let sh-date-m substring  #dateandtime 19 22
  let sh-date-y substring  #dateandtime 23 length #dateandtime
  
  if ampm = "PM"[set sh-time-h (read-from-string sh-time-h + 12)]
  
  report (word sh-date-y "-" sh-date-m "-" sh-date-d "T" sh-time-h "-" sh-time-m "-" sh-time-s "Z")
end
